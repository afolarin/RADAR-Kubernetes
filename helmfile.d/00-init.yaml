repositories:
- name: stable
  url: https://kubernetes-charts.storage.googleapis.com
- name: jetstack
  url: https://charts.jetstack.io

helmDefaults:
  atomic: true
  force: true
  timeout: 600

releases:
  - name: cert-manager
    namespace: cert-manager
    wait: true
    installed: {{ requiredEnv "RADAR_INSTALL_BASE" }}
    chart: ../charts/cert-manager
    set:
      - name: server_name
        value: {{ requiredEnv "SERVER_NAME" }}
      - name: maintainer_email
        value: {{ requiredEnv "MAINTAINER_EMAIL" }}

  - name: prometheus-operator
    chart: ../charts/prometheus-operator
    wait: true
    namespace: monitoring
    installed: {{ requiredEnv "RADAR_INSTALL_BASE" }}
    values:
      # - "../charts/prometheus-operator/origin-values.yaml"
      - "../charts/prometheus-operator/values.yaml"
    set:
      - name: server_name
        value: {{ requiredEnv "SERVER_NAME" }}

      - name: prometheus-operator.prometheus.ingress.hosts
        values: ["prometheus.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.prometheus.ingress.tls[0].secretName
        value: radar-base-tls
      - name: prometheus-operator.prometheus.ingress.tls[0].hosts
        values: ["prometheus.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
        value: "{{ requiredEnv "MONITORING_PROMETHEUS_DISK_SIZE" }}"

      - name: prometheus-operator.alertmanager.ingress.hosts
        values: ["alertmanager.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.alertmanager.ingress.tls[0].secretName
        value: radar-base-tls
      - name: prometheus-operator.alertmanager.ingress.tls[0].hosts
        values: ["alertmanager.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.alertmanager.alertmanagerSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
        value: "{{ requiredEnv "MONITORING_ALERTMANAGER_DISK_SIZE" }}"

      - name: prometheus-operator.grafana.ingress.hosts
        values: ["grafana.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.grafana.ingress.tls[0].secretName
        value: radar-base-tls
      - name: prometheus-operator.grafana.ingress.tls[0].hosts
        values: ["grafana.{{ requiredEnv "SERVER_NAME" }}"]
      - name: prometheus-operator.grafana.adminPassword
        value: "{{ requiredEnv "MONITORING_GRAFANA_ADMIN_PASSWORD" }}"

      - name: nginx_auth
        value: "{{ requiredEnv "MONITORING_NGINX_AUTH" }}"

      - name: prometheus-operator.alertmanager.config.receivers[1].name
        value: "default"
      - name: prometheus-operator.alertmanager.config.receivers[1].slack_configs[0].api_url
        value: "{{ requiredEnv "MONITORING_SLACK_WEBHOOK_URL" }}"
      - name: prometheus-operator.alertmanager.config.receivers[1].slack_configs[0].channel
        value: "{{ requiredEnv "MONITORING_SLACK_CHANNEL" }}"

  - name: nginx-ingress
    chart: stable/nginx-ingress
    version: 1.6.16
    installed: {{ requiredEnv "RADAR_INSTALL_BASE" }}
    values:
      - "../charts/nginx-ingress/values.yaml"
    set:
      - name: controller.replicaCount
        value: {{ requiredEnv "NGINX_INGRESS_REPLICA_COUNT" }}

  - name: kafka-manager
    chart: ../charts/kafka-manager
    wait: false
    installed: {{ requiredEnv "RADAR_INSTALL_BASE" }}
    set:
      - name: image.tag
        value: "{{ requiredEnv "KAFKA_MANAGER_IMAGE_TAG" }}"
      - name: ingress.hosts
        values: ["{{ requiredEnv "SERVER_NAME" }}"]
      - name: ingress.tls[0].secretName
        value: radar-base-tls
      - name: ingress.tls[0].hosts
        values: ["{{ requiredEnv "SERVER_NAME" }}"]
      - name: basicAuth.enabled
        value: true
      - name: basicAuth.username
        value: "{{ requiredEnv "KAFKA_MANAGER_USERNAME" }}"
      - name: basicAuth.password
        value: "{{ requiredEnv "KAFKA_MANAGER_PASSWORD" }}"
