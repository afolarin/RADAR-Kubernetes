apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "radar-upload-connect-backend.fullname" . }}
  labels:
    app: {{ template "radar-upload-connect-backend.name" . }}
    chart: {{ template "radar-upload-connect-backend.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  upload.yml: |
    baseUri: "http://0.0.0.0:8085/upload/api/"
    advertisedBaseUri: https://{{ .Values.serverName }}/upload/api/
    enableCors: yes
    clientId: {{ .Values.client_id }}
    clientSecret: {{ .Values.client_secret }}
    managementPortalUrl: http://{{ .Values.managementportal_host }}:8080/managementportal
    jdbcDriver: org.postgresql.Driver
    jdbcUrl: jdbc:postgresql://{{ .Values.postgres.host }}:5432/uploadconnector
    jdbcUser: {{ .Values.postgres.user }}
    jdbcPassword: {{ .Values.postgres.password }}
    additionalPersistenceConfig:
      "hibernate.dialect": "org.hibernate.dialect.PostgreSQL95Dialect"
    sourceTypes:
      - name: "altoida"
        topics:
          - "connect_upload_altoida_acceleration"
        contentTypes:
          - "application/zip"
        timeRequired: false
        sourceIdRequired: false
      - name: "axivity"
        topics:
          - "connect_upload_axivity_acceleration"
          - "connect_upload_axivity_metadata"
        contentTypes:
          - "application/zip"
        timeRequired: false
        sourceIdRequired: false
      - name: "physilog5"
        topics:
          - "connect_upload_physilog_acceleration"
        contentTypes:
          - "application/zip"
          - "application/json"
        timeRequired: false
        sourceIdRequired: false
      - name: "oxford-wearable-camera"
        topics:
          - "connect_upload_oxford_camera_data"
          - "connect_upload_oxford_camera_image"
        contentTypes:
          - "application/zip"
        timeRequired: false
        sourceIdRequired: false
  logback.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <configuration>

        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>%date{yyyy-MM-dd HH:mm:ss,UTC} UTC [%.2thread] %-5level - %msg [%logger:%line] %n</pattern>
            </encoder>
        </appender>

        <logger name="org.radarbase" level="INFO" additivity="false">
            <appender-ref ref="STDOUT" />
        </logger>

        <logger name="org.hibernate" level="WARN" additivity="false">
            <appender-ref ref="STDOUT" />
        </logger>

        <root level="INFO">
            <appender-ref ref="STDOUT" />
        </root>
    </configuration>
